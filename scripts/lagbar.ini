[script]
n0=menu @lag.win {
n1=  색상
n2=  .게이지바
n3=  ..빨간색:{ lag.red }
n4=  ..파란색:{ lag.blue }
n5=  ..연두색:{ lag.green }
n6=  ..노란색:{ lag.yellow }
n7=  ..하얀색:{ lag.white }
n8=  ..오렌지:{ lag.orange }
n9=  ..-
n10=  ..사용자 정의:{ lag.custom }
n11=  .-
n12=  .문자:{ lag.stext }
n13=  .테두리:{ lag.sborder }
n14=  .배경색:{ lag.sface }
n15=  .-
n16=  .기본색상:{ lag.defaults }
n17=  .-
n18=  측정시간(초)
n19=  .매 $+($lag.delay,초) 마다:{ lag.stime }
n20=  스타일
n21=  .$iif($readini($lag.spc($script),lagstuff,oval) == 1,$style(1) 둥글게,둥글게):{ lag.oval.set $iif($readini($lag.spc($script),lagstuff,oval) == 1,0,1) | $lag.style }
n22=  .-
n23=  .$iif($readini($lag.spc($script),lagstuff,style) == small,$style(1) 작게,작게):{ lag.style.set small | $lag.style }
n24=  .$iif($readini($lag.spc($script),lagstuff,style) == classic,$style(1) 클래식,클래식):{ lag.style.set classic | $lag.style } 
n25=  -
n26=  $iif($active ischan,측정값 출력):{ lag.msg }
n27=  방식
n28=  .$iif($readini($lag.spc($script),lagstuff,method) == raw,$style(1) raw,raw):{ lag.method.raw }
n29=  .$iif($readini($lag.spc($script),lagstuff,method) == ctcp,$style(1) ctcp,ctcp):{ lag.method.ctcp }
n30=  .-
n31=  .$iif($readini($lag.spc($script),lagstuff,method) == notice,$style(1) 기본,기본):{ lag.method.notice }
n32=  $iif($version >= 6.0,서버)
n33=  .현재 $lower($scid($timer(.lag.chk).cid).network):{ echo $color(info) -a *** 현재 나의 랙 측정서버 : $+($chr(2),$scid($timer(.lag.chk).cid).network,$chr(2)) Server: $+($chr(2),$scid($timer(.lag.chk).cid).server,$chr(2)) }
n34=  -
n35=  닫기:{ lag.stop | echo $color(info) -a *** Stopped all lag bar functions, to turn back on type /lag.start }
n36=}
n37=alias -l lag.bar {
n38=  lag.win.size 
n39=  tbwin Attach @lag.win
n40=  var %z = $dll($_tbwin,GetTBInfo,NOT_USED),%w = $gettok(%z,1,32),%h = $gettok(%z,2,32)
n41=  lagbar.size %w %h
n42=  tbwin OnSize /lagbar.size
n43=  lag.update
n44=  window -a @lag.win
n45=}
n46=alias lag.update { if ($window(@lag.win)) { $lag.style } }
n47=alias lag.win.size { window -phB +d @lag.win 0 0 200 22 }
n48=alias lagbar.size { window @lag.win $calc($1 - 195) $int($calc(($2 - 22) / 2)) 200 22 }
n49=alias -l lag.oval.set { writeini -n $lag.spc($script) lagstuff oval $1 }
n50=alias -l lag.oval { return $iif($readini($lag.spc($script),lagstuff,oval) == 1,d)) } 
n51=alias -l lag.style.set { writeini $lag.spc($script) lagstuff style $1 }
n52=alias -l lag.sface { writeini -n $lag.spc($script) lagstuff face $$input(R/G/B 칼라로 입력하세요. ex. $+($chr(36),rgb,$chr(40),face,$chr(41)),129) | $lag.style }
n53=alias -l lag.style { return $iif($readini($lag.spc($script),lagstuff,style),$+(lag.,$ifmatch),$+(lag.,classic)) }
n54=alias -l lag.face { return $iif($readini($lag.spc($script),lagstuff,face),$ifmatch,$rgb(face))) } 
n55=alias -l lag.stext {  writeini -n $lag.spc($script) lagstuff text $$input(R/G/B 칼라로 입력하세요. ex. $+($chr(36),rgb,$chr(40),text,$chr(41)),129) | $lag.style }
n56=alias -l lag.text { return $iif($readini($lag.spc($script),lagstuff,text),$ifmatch,$rgb(text))) } 
n57=alias -l lag.sborder { writeini -n $lag.spc($script) lagstuff border $$input(R/G/B 칼라로 입력하세요. ex. $+($chr(36),rgb,$chr(40),text,$chr(41)),129) | $lag.style }
n58=alias -l lag.border { return $iif($readini($lag.spc($script),lagstuff,border),$ifmatch,$rgb(text))) } 
n59=alias -l lag.defaults { remini $lag.spc($script) lagstuff face | remini $lag.spc($script) lagstuff text | remini $lag.spc($script) lagstuff border | remini $lag.spc($script) lagstuff color | $lag.style }
n60=alias -l lag.classic {
n61=  var %l = $hget(txlag,curlag),%t = Lag : $lag.isms($hget(txlag,curlag))
n62=  drawrect -nrf @lag.win $lag.face 1 0 0 200 22
n63=  drawtext -nro @lag.win $lag.text Tahoma -7 $calc(65 - $int($width(%t, Tahoma, -7))) 7 %t
n64=  drawrect $+(-nr,$lag.oval) @lag.win $lag.border 2 83 3 105 18
n65=  drawrect $+(-nrf,$lag.oval) @lag.win $lag.color 1 85 5 $iif(%l > 10,$iif(%l != ??,101,0),$int($calc(%l * 10.1))) 14
n66=  drawdot @lag.win
n67=}
n68=alias -l lag.small {
n69=  var %l = $hget(txlag,curlag),%t = Lag : $lag.isms($hget(txlag,curlag))
n70=  drawrect -nrf @lag.win $lag.face 1 0 0 200 22
n71=  drawtext -nr @lag.win $lag.text Tahoma -7 $int($calc((110 - $width(%t, Tahoma, -7)) / 2)) 7 %t
n72=  drawrect $+(-nr,$lag.oval) @lag.win $lag.border 1 83 7 105 12
n73=  drawrect $+(-nrf,$lag.oval) @lag.win $lag.color 1 85 9 $iif(%l > 10,$iif(%l != ??,101,0),$int($calc(%l * 10.1))) 8
n74=  drawdot @lag.win
n75=}
n76=alias lag.deploy { 
n77=  if ($1) { writeini -n $lag.spc($script) lagstuff text $1 }
n78=  if ($2) { writeini -n $lag.spc($script) lagstuff border $2 }
n79=  if ($3) { writeini -n $lag.spc($script) lagstuff color $3 }
n80=  if ($4) { writeini -n $lag.spc($script) lagstuff face $4 }
n81=  lag.stop
n82=  lag.start
n83=}
n84=alias lag.scheme { echo $color(info) -a *** technique lag bar scheme settings, pass this to a friend /lag.deploy $lag.text $lag.border $lag.color $lag.face }
n85=on ^*:notice:lag*:?: { 
n86=  if ($nick == $me) && ($2 isnum) && ($hget(txlag)) { 
n87=    hadd txlag curlag $calc($calc($ticks - $2) / 1000) 
n88=    lag.update
n89=    haltdef 
n90=  }
n91=  elseif (!$hget(txlag)) { 
n92=    lag.stop 
n93=    echo $color(info) -a *** Hash table error shutting down lag bar!
n94=    haltdef
n95=  }
n96=}
n97=ctcp *:lag*:?:{ 
n98=  if ($nick == $me) && ($2 isnum) && ($hget(txlag)) {
n99=    hadd txlag curlag $calc($calc($ticks - $2) / 1000)
n100=    lag.update  
n101=    halt 
n102=  }
n103=  elseif (!$hget(txlag)) { 
n104=    lag.stop 
n105=    echo $color(info) -a *** Hash table error shutting down lag bar!
n106=    halt
n107=  }
n108=}
n109=raw 421:*:{
n110=  if ($1 == $me) && ($2 isnum) { 
n111=    if ($hget(txlag)) hadd txlag curlag $calc($calc($ticks - $2) / 1000) 
n112=    lag.update 
n113=    halt
n114=  }
n115=}
n116=alias lag.start {
n117=  if (!$readini($lag.spc($script),lagstuff,method)) { lag.method }
n118=  if (!$hget(txlag)) { 
n119=    hmake txlag 1 
n120=    hadd txlag curlag ?? 
n121=  } 
n122=  lag.bar 
n123=  lag.fill
n124=  lag.chk
n125=  set %lag.stat 1
n126=}
n127=alias -l lag.method { 
n128=  $iif($input(Would you like to use a notice for lag check if not press no then a ctcp will be used you can also use the raw method from popup!,8,Lag method.),writeini -n $lag.spc($script) lagstuff method notice,writeini $lag.spc($script) lagstuff method ctcp) 
n129=  lag.stop
n130=  $iif($server,lag.start)
n131=}
n132=alias -l _tbwin { 
n133=  if ($isfile($+($scriptdir,tbwin.dll))) {
n134=    return $lag.spc($+($scriptdir,tbwin.dll))
n135=  }
n136=  elseif ($findfile($mircdir,tbwin.dll,1)) {
n137=    return $lag.spc($ifmatch)
n138=  }
n139=  else {
n140=    lag.stop
n141=    .timer.lag.error $iif($version >= 6.0,-i) 2 5 echo $color(info) -a *** Couldn't locate tbwin.dll in your mIRC or script directory, please put tbwin.dll in your mIRC or script directory so lag bar can function!
n142=  }
n143=}
n144=alias -l lag.color { 
n145=  if ($readini($lag.spc($script),lagstuff,color)) {
n146=    return $ifmatch
n147=  }
n148=  else {
n149=    return $rgb(255,0,0)
n150=  }
n151=}
n152=alias -l lag.spc { return $+($chr(34),$1-,$chr(34)) }
n153=alias -l lag.red { writeini -n $lag.spc($script) lagstuff color $rgb(255,0,0) | lag.fill }
n154=alias -l lag.blue { writeini -n $lag.spc($script) lagstuff color $rgb(0,0,255) | lag.fill }
n155=alias -l lag.green { writeini -n $lag.spc($script) lagstuff color $rgb(12,240,30) | lag.fill }
n156=alias -l lag.yellow { writeini -n $lag.spc($script) lagstuff color $rgb(255,255,0) | lag.fill }
n157=alias -l lag.orange { writeini -n $lag.spc($script) lagstuff color $rgb(252,127,0) | lag.fill }
n158=alias -l lag.white { writeini -n $lag.spc($script) lagstuff color $rgb(255,255,255) | lag.fill }
n159=alias -l lag.custom { writeini -n $lag.spc($script) lagstuff color $$input(R/G/B 칼라로 입력하세요. ex. $+($chr(36),rgb) identifier!,129) | lag.fill }
n160=alias -l tbwin { dll $_tbwin $1- }
n161=alias -l lag.chk { 
n162=  if ($readini($lag.spc($script),lagstuff,method) != raw) {
n163=    .timer.lag.chk $iif($version >= 6.0,-i) 0 $lag.delay $&
n164=      $+(lag.,$readini($lag.spc($script),lagstuff,method)) | lag.ignore.chk
n165=  } 
n166=  else { 
n167=    .timer.lag.chk $iif($version >= 6.0,-i) 0 $lag.delay $+(lag.,$readini($lag.spc($script),lagstuff,method))
n168=  }
n169=} 
n170=alias -l lag.delay { return $iif($readini($lag.spc($script),lagstuff,delay),$ifmatch,20) }
n171=alias lag.stime { 
n172=  writeini -n $lag.spc($script) lagstuff delay $$input(몇 초마다 측정할건지 입력하세요. 10초이상을 추천합니다.,129)
n173=  lag.chk
n174=}
n175=alias -l lag.method.raw { writeini -n $lag.spc($script) lagstuff method raw | lag.stop | $iif($server,lag.start) }
n176=alias -l lag.method.ctcp { writeini -n $lag.spc($script) lagstuff method ctcp | lag.stop | $iif($server,lag.start) }
n177=alias -l lag.method.notice { writeini -n $lag.spc($script) lagstuff method notice | lag.stop | $iif($server,lag.start) }
n178=alias -l lag.ctcp { $iif($server,.ctcp $me lag $ticks) }
n179=alias -l lag.notice { $iif($server,.notice $me lag $ticks) }
n180=alias -l lag.raw { $iif($server,.raw $ticks) }
n181=alias -l lag.isms { if ($1 isnum) { return $+($1,s) } | else { return $1 } }
n182=alias -l lag.msg { .echo -a 5현재 나의 랙수치1 :14 $lag.isms($hget(txlag,curlag)) }
n183=alias lag.stop { 
n184=  $iif($window(@lag.win),window -c @lag.win)
n185=  .timer.lag.chk off 
n186=  $iif($hget(txlag),hfree txlag)
n187=  set %lag.stat 0
n188=}
n189=on *:load: { 
n190=  if ($version >= 5.91) { 
n191=    lag.style.set classic
n192=    lag.oval.set 0
n193=    lag.method 
n194=    echo $color(info) -a *** technique lag bar v.09 loaded successfully, right click on lagbar for options! 
n195=  }
n196=  else {
n197=    echo $color(info) -a *** This needs mIRC version 5.91+ this is $version , this addon wont work unloading it!
n198=    .unload -rs " $+ $script $+ "
n199=  }
n200=}
n201=on *:connect:{ 
n202=  if ($version >= 6.0) && (!$window(@lag.win)) { 
n203=    lag.start
n204=  }
n205=  elseif ($version == 5.91) {
n206=    lag.start
n207=  }
n208=}
n209=on *:unload:{ lag.stop | remini $lag.spc($script) lagstuff }
n210=on *:active:*:{ if ($version >= 6.0) && ($timer(.lag.chk)) && ($activecid != $timer(.lag.chk).cid) { scid $activecid lag.chk } }
n211=on *:disconnect:{ 
n212=  if ($version >= 6.0) { 
n213=    var %s = 1,%t 
n214=    while (%s <= $scon(0)) {
n215=      if ($scon(%s).status == connected) { inc %t }
n216=      inc %s
n217=    }
n218=    $iif(!%t,lag.stop)
n219=  }
n220=  elseif ($version == 5.91) {
n221=    lag.stop 
n222=  }
n223=}
n224=alias -l lag.fill {
n225=  if ($hget(txlag)) {
n226=    var %f = 1,%g = 30,%h = $hget(txlag,curlag)
n227=    while (%f <= 10) {
n228=      $+(.timer.lag.fill,$r(1,999)) -h 1 %g hadd txlag curlag %f  
n229=      $+(.timer.lag.fill2,$r(1,9999)) -h 1 $calc(%g + 1) lag.update
n230=      inc %f
n231=      inc %g 30
n232=    }
n233=  }
n234=  if ($hget(txlag)) {
n235=    var %i = 10,%j = 300
n236=    while (%i >= 0) {
n237=      $+(.timer.lag.clr,$r(1,999)) -h 1 %j hadd txlag curlag %i 
n238=      $+(.timer.lag.clr2,$r(1,9999)) -h 1 $calc(%j + 1) lag.update
n239=      dec %i
n240=      inc %j 30
n241=    }
n242=  }
n243=  .timer.lag.restore -h 1 1000 hadd txlag curlag %h
n244=  .timer.lag.restore2 -h 1 1050 lag.update
n245=}
n246=alias -l lag.ignore.chk { 
n247=  if ($ignore($address($me,5))) && (notice isin $ignore($ifmatch).type) && ($readini($lag.spc($script),lagstuff,method) == notice) {   
n248=    .timer.lag.error2 1 5 echo $color(info) -a *** You are ignoring notice's from yourself lag bar wont work,fix then type /lag.start
n249=    lag.stop
n250=  }
n251=  elseif ($ignore($address($me,5))) && (ctcp isin $ignore($ifmatch).type) && ($readini($lag.spc($script),lagstuff,method) == ctcp) {
n252=    .timer.lag.error3 1 5 echo $color(info) -a *** You are ignoring ctcp's from yourself lag bar wont work, fix then type /lag.start
n253=    lag.stop
n254=  }
n255=  elseif ($ignore(*!*@*)) && (notice isin $ignore($ifmatch).type) && ($readini($lag.spc($script),lagstuff,method) == notice) {
n256=    .timer.lag.error4 1 5 echo $color(info) -a *** You are ignoring notice's, your lag bar wont work, fix then type /lag.start
n257=    lag.stop
n258=  }
n259=  elseif ($ignore(*!*@*)) && (ctcp isin $ignore($ifmatch).type) && ($readini($lag.spc($script),lagstuff,method) == ctcp) {
n260=    .timer.lag.error5 1 5 echo $color(info) -a *** You are ignoring ctcps, your lag bar wont work, fix then type /lag.start
n261=    lag.stop
n262=  }
n263=}

[lagstuff]
style=small
oval=1
method=notice
delay=20
