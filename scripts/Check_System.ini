[script]
n0=;### MDX.dll, Sin.dll 파일이 있는 경로를 설정한다.
n1=alias -l SMDX return scripts\MDX.dll
n2=alias -l SSin return scripts\Sin.dll
n3=
n4=;### 컨비젼스
n5=alias -l sround { return $round($calc($1 / 1024^2),2) }
n6=alias -l alof { return $bytes($1).suf }
n7=
n8=;### /Sin 명령으로 시작된 쓰레드의 CPU 사용량 값을 받아들인다.
n9=;### $1 = 사용량 값입니다 ( %% )
n10=on 1:signal:cpusagea: {
n11=  if ($dialog(sin)) {
n12=    ;### 받은값을 뿌려준다.
n13=    did -ra sin 2 $1
n14=    did -ra sin 3 $1 $+ %
n15=  }
n16=}
n17=
n18=on 1:signal:interface: {
n19=  if ($dialog(sin)) {
n20=    did -ra sin 10  받음:  $sround($1) $+ MB (S: $bytes($2,speed).suf $+ /s) 
n21=    did -ra sin 11  보냄:  $sround($3) $+ MB (S: $bytes($4,speed).suf $+ /s)
n22=  }
n23=}
n24=
n25=
n26=;### /Sin 명령으로 시작된 쓰레드의 Memory 사용량 값을 받아들인다.
n27=;### $1 = 전체 메모리, $2 = 사용 메모리, $3 = 남음 메모리, $4 = 사용량 값 ( %% )
n28=on 1:signal:memoryusagea: {
n29=  if ($dialog(sin)) {
n30=    ;### 받은값을 뿌려준다.
n31=    did -ra sin 8  $sround($3) $+ / $+  $sround($1) $+ MB (free: $sround($2) $+ MB)
n32=    did -ra sin 6 $4
n33=    did -ra sin 7 $4 $+ %
n34=  }
n35=}
n36=
n37=dialog sin {
n38=  title "CPU / Memory 사용률"
n39=  size -1 -1 236 155
n40=  option pixels
n41=  icon $SSin, 0
n42=  box "CPU", 1, 3 1 230 50
n43=  text "0 0 100", 2, 9 17 190 12
n44=  text "0%", 3, 203 17 25 14
n45=  text "CpuName", 4, 10 32 218 14
n46=  box "Memory", 5, 3 52 230 51
n47=  text "0 0 100", 6, 9 68 190 12
n48=  text "0%", 7, 202 68 25 13
n49=  text "Memory S", 8, 10 83 218 14
n50=  box "Interface", 9, 3 104 230 47
n51=  text "received", 10, 11 118 220 14
n52=  text "sent", 11, 11 133 220 14
n53=}
n54=
n55=
n56=on *:dialog:sin:*:*: {
n57=  if ($devent == init) {
n58=    dll $SMDX MarkDialog $dname
n59=    dll $SMDX SetBorderStyle 2,6 clientedge
n60=    dll $SMDX SetControlMDX $dname 2 ProgressBar smooth > Sin\ctl_gen.mdx
n61=    dll $SMDX SetControlMDX $dname 6 ProgressBar smooth > Sin\ctl_gen.mdx
n62=    did -ra sin 4  $dll(scripts\Sin.dll,GetCPU,Name)
n63=  }
n64=  ;### 캔슬 버튼 또는, 상단 X 버튼을 눌렀을 경우, 창 닫음을 인식 후, CPU와 메모리 쓰레드를 중지한다.
n65=  if ($devent == close) {
n66=    .dll scripts/Sin.dll StopAll -
n67=  }
n68=}
n69=
n70=;### /Sin 명령으로 CPU, Memory 메모리 사용량 정보창을 오픈한다.
n71=alias sin {
n72=  ;### 사용량 정보창이 열려 있는지 체크한다.
n73=  ;### 창이 열려 있을 경우에는 창을 닫고, 다시 창을 오픈한다.
n74=  if ($dialog(sin)) {
n75=    dialog -x sin sin
n76=    dialog -ma sin sin
n77=  }
n78=  ;### 창이 열려 있지 않다면, 바로 오픈한다.
n79=  else {
n80=    .dialog -ma sin sin
n81=    ;### CPU와 Memory 쓰레드를 동시에 돌린다.
n82=    ;500^1000은 ^ 으로 구분하여, 앞의 시간은 CPU 뒤의 시간은 메모리 갱신 시간을 뜻합니다. (단위 1초 = 1000)
n83=    ;98/ME의 경우에는 시간을 짧게 설정할 경우 딜레이 현상이 생길 수 있습니다. 
n84=    .dll Scripts/Sin.dll StartAll 500^1150
n85=  }
n86=}
n87=
n88=
n89=alias SystemInfo {
n90=  say 2─━1♬ 2M y 1System_InfomatioN       $logo
n91=  say 2─━1♬ 1프로세서0___14│ $dll($SSin,GetCPU,Name) 〔 $dll($SSin,GetCPU,Speed) $+ Mhz 〕
n92=  say 2─━1♬ 1운영체제0___14│ $dll($SSin,GetOSVersion,.)
n93=  say 2─━1♬ 1네트워크0___14│ $dll($SSin,GetInterface,Desc) $round($calc($dll($SSin,GetInterface,Speed) / 1000^2),2) $+ Mb/s
n94=  say 2─━1♬ 1사운드카드0_14│ $Dll($SSin,GetAudioDevice,.)
n95=  say 2─━1♬ 1그래픽카드0_14│ $dll($SSin,GetDisplay,Device)
n96=  say 2─━1♬ 1메모리정보0_14│ $sround($dll($SSin,GetMemory,APM)) $+ / $+ $sround($dll($SSin,GetMemory,TPM)) $+ MB 〔 여유 메모리값: $sround($dll($SSin,GetMemory,FPM)) $+ MB 〕
n97=}
n98=
n99=alias detailSystemInfo {
n100=  window -d @시스템정보 -1 -1 650 440
n101=  echo -a $logo 　　　　　14---=5 Get 4SystemInFo 14=---
n102=  echo -a 
n103=  echo -a 12운영체제　　: $dll($SSin,GetOSVersion,.)
n104=  echo -a 12프로세스　　:
n105=  echo -a 　　　　　　 모　델 -> $dll($SSin,GetCPU,Name)
n106=  echo -a 　　　　　　 클　럭 -> $dll($SSin,GetCPU,Speed) $+ Mhz 7 //  $round($calc($dll($SSin,GetCPU,Speed) / 1000),2) $+ Ghz
n107=  echo -a 　　　　　　 캐　쉬 -> 7#1 $dll($SSin,GetCPU,Cache1) 7#2 $dll($SSin,GetCPU,Cache2) 7#3 $dll($SSin,GetCPU,Cache3)
n108=  echo -a 　　　　　　 지　원 -> $dll($SSin,GetCPU,Support)
n109=  echo -a 12네트워크　　:
n110=  echo -a 　　　　　　 장　치 -> $dll($SSin,GetInterface,Desc)
n111=  echo -a 　　　　　　 속　도 -> $round($calc($dll($SSin,GetInterface,Speed) / 1000^2),2) $+ Mb/s
n112=  echo -a 　　　　　　 형　식 -> $dll($SSin,GetInterface,Type)
n113=  echo -a 　　　　　　 상　태 -> $dll($SSin,GetInterface,AdminStatus)
n114=  echo -a 　　　　　　 받　음 -> $sround($dll($SSin,GetInterface,InData)) $+ MB 7 /  $dll($SSin,GetInterface,InData) Bytes
n115=  echo -a 　　　　　　 보　냄 -> $sround($dll($SSin,GetInterface,OutData)) $+ MB 7 /  $dll($SSin,GetInterface,OutData) Bytes
n116=  echo -a 12메모리정보　:
n117=  echo -a 　　　　　　 전　체 -> $sround($dll($SSin,GetMemory,ASM)) $+ / $+ $sround($dll($SSin,GetMemory,TSM)) $+ MB (사용가능: $sround($dll($SSin,GetMemory,FSM)) $+ MB)
n118=  echo -a 　　　　　　 실　제 -> $sround($dll($SSin,GetMemory,APM)) $+ / $+ $sround($dll($SSin,GetMemory,TPM)) $+ MB (사용가능: $sround($dll($SSin,GetMemory,FPM)) $+ MB)
n119=  echo -a 　　　　　　 가　상 -> $sround($dll($SSin,GetMemory,AVM)) $+ / $+ $sround($dll($SSin,GetMemory,TVM)) $+ MB (사용가능: $sround($dll($SSin,GetMemory,FVM)) $+ MB)
n120=  echo -a 　　　　　　 페이지 -> $sround($dll($SSin,GetMemory,AFM)) $+ / $+ $sround($dll($SSin,GetMemory,TFM)) $+ MB (사용가능: $sround($dll($SSin,GetMemory,FFM)) $+ MB / 파일크기: $sround($dll($SSin,GetMemory,PFS)) $+ MB)
n121=  echo -a 12디스크정보　:
n122=  var %a = 99,%f,%p,%t,%z,%y
n123=  while (%a <= 122) {
n124=    %y = $chr(%a)
n125=    if ($disk(%y)) {
n126=      inc %t $disk(%y).size
n127=      inc %f $disk(%y).free
n128=      set %p $int($calc(($disk(%y).free / $disk(%y).size)*100)) $+ %
n129=      echo -a  　　　　　　 $upper($addtok(%y,드라이브 ->,0)) 라벨: $addtok($disk(%y).label,$chr(3),0) 7:: 전체: $alof($disk(%y).size) 7/ 사용: $alof($calc($disk(%y).size - $disk(%y).free)) 7/ 사용가능: $alof($disk(%y).free) 7: %p
n130=    }
n131=    inc %a
n132=  }
n133=  echo -a 12디스플레이　:
n134=  echo -a 　　　　　　 장　치 -> $dll($SSin,GetDisplay,Device)
n135=  echo -a 　　　　　　 칼　라 -> $dll($SSin,GetDisplay,Color) Bits
n136=  echo -a 　　　　　　 픽　셀 -> $dll($SSin,GetDisplay,Pixel) Pixel
n137=  echo -a 　　　　　　 주사율 -> $dll($SSin,GetDisplay,Frequency) Hz
n138=  echo -a 12오디오정보　: $Dll($SSin,GetAudioDevice,.)
n139=}
n140=
n141=ON *:load: {
n142=  echo -a 
n143=  echo -a ####### 모두 보기 -> /systeminfo
n144=  echo -a ####### CPU, Memory 사용률 -> /Sin
n145=  echo -a 
n146=}
